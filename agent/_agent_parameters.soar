sp {top-state*elaborate*agent-params
   (state <s> ^top-state <s>)
-->
   (<s> ^agent-params <params>)
}

#JK TODO resolve how parser is tested,
#sp {top-state*elaborate*parser-testing
#   (state <s> ^top-state <s>
#              ^agent-params.domain internal
#              ^world-usage internal)
#-->
#   (<s> ^parser-testing true)
#}

sp {top-state*elaborate*agent-params*object-rep-info
   (state <s> ^superstate nil
              ^agent-params <params>)
-->
   (<params> ^object-rep-info <rep>)
   (<rep> ^copy-level1 waypoint
          ^ignore-level1 handle item-type object-instance predicates in-smem room1 storage1
          ^ignore-level2 arm-status object-status visible dialog-object handle modifier1)
}

sp {top-state*elaborate*agent-params*task
   (state <s> ^superstate nil
              ^agent-params <params>)
-->
   (<params> ^use-default-values true)
   (<params> ^use-object-variablization true)
   (<params> ^use-intra-task-transfer true)
   (<params> ^action-search-depth 3
             ^initial-search-depth 1)
   (<params> ^confirm-arm-actions no)
#	     ^use-exploration true) to be set in action/composite-action/operator-tie/elaborations: max-evaluation-depth. can't be set here otherwise chunking does not work correctly
}

sp {top-state*elaborate*agent-params*perception
   (state <s> ^top-state <s>
              ^agent-params <params>)
-->
   (<params> ^stability-check-duration 0)#2)#1	# How many seconds to wait before checking whether an object is stable (and thus not noise)
   (<params> ^pos-diff-threshold .02)		# How far an object should have moved before the difference is considered significant
   (<params> ^vol-low-diff-threshold .8) #.8	# How much an object must have shrunk before the difference is considered significant
   (<params> ^vol-high-diff-threshold 1.2)#1.2  # How much an object must have grown before the difference is considered significant
   (<params> ^max-stability-checks 5)		# How many times an object will be checked for stability before concluding that it must exist
   (<params> ^occlusion-threshold .15) #.1		# How much an object must be occluded before we determine we shouldn't be able to see it well
   (<params> ^occlusion-check-period 3)		# How often (in seconds) an occluded object will be rechecked to see if we can see it now
#   (<params> ^clear-view-distance .01)		# How far away the closest object must be from the target before it's considered clear
#   (<params> ^stale-match-distance .1)		# How close an object has to be to be considered a match for a stale object
#   (<params> ^maximum-stale-distance .1)	# How close a stale object is to a new object to be considered a possible match (convex distance)
   (<params> ^contained-threshold .33)		# How much of a given object should be overlapped by another before it's considered inside it
   (<params> ^contained-by-threshold .5)	# How much an existing object should be overlapped by another before it's considered a match
#   (<params> ^update-object-period 3)		# How often (in seconds) a non-occluded object should be rechecked (update pos/bbox)
   (<params> ^recheck-growth-delay 5)		#
#   (<params> ^aggressive-match-distance .05)
#   (<params> ^vol-low-candidate-match .6)
#   (<params> ^vol-high-candidate-match 1.4)
}

# Timer for updating world predicates every 100 decision cycles
sp {top-state*elaborate*timer-update-world-predicates
   (state <s> ^top-state <s>
              ^agent-params <params>
              ^io.input-link.time.steps <steps>)
-->
   (<params> ^update-world-predicates-timer (mod <steps> 100))
}
